git config --global user.name "Malm"
git config --global user.email "kfmalm@gmail.com"

	Set up the necessary Git files
git init

	Stages your README file, adding it to the list of files to be committed
git add filnamn

	om du inte vill ha den addad så resetar du med
git reset filnamn

	Commits your files, adding the message "first commit"
git commit -m 'first commit'

	Creates a remote named "origin" pointing at your github repository
git remote add origin https://github.com/gralm/NapalmBomber.git

	Clone a repository into the current directory in terminal
git clone https://github.com/gralm/NapalmBomber.git
detta kan generera felmeddelande: "fatal: unable to access 'http://github/(gralm/symmetry.git/': Could not resolve host: github" av någon outgrundlig anledning och då är lösningen att skriva:
git clone git@github.com:gralm/NapalmBomber.git kan skrivas av någon out

	
	Ta sig ur jävla idiotskiten
escape 
:q

	Skapa fil
touch filnamn

	Ordlista:
remote		repository stored on another computer/server.

	visar historiken i en branch, 
git log --pretty=oneline --graph;

git diff
git diff HEAD

	Pusha remoten "origin"(som du har addat alla nya/uppdaterade filerna till och som du har committat) till branchen "master"
git push origin master
	om jag vill bara spara över skit utan att pulla:
	ibland frågar den efter user o pass, och vad man än skriver in så är det såklart jävla fel.
	Använd då din "ssh-url"-hittepåadress som helt plötsligt är lite mer korrekt än din url-adress för 
	överrasknings skull.
	git config --get remote.origin.url:
		http://www.github.com/gralm/symmetry.git
	ändras med följande kommande:
	git remote set-url origin git@github.com:gralm/symmetry.git

git push -f origin branch

	för att spara på annan remote branch som finns på github:
git push origin master:SymmetryObject
git pull origin SymmetryObject		här använder man INTE master av någon outgrundlig anledning som jag inte 										fattar, men det är bara att googla och kopiera.
git remote -v visar fortfarande usrpungsbranchen.
och ditt lokala branchnamn kan också fortfarande vara ursprungsbranchen master.


git status
git ls-files



???
[23:20:36] Anders: git checkout master; git merge subdivision;



make > hi.txt 2>&1